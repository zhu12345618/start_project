{"version":3,"sources":["assets/scripts/Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","onLoad","update","dt","getPlayerDistance","onPicked","opacityRatio","game","timer","starDuration","minOpacity","node","opacity","Math","floor","playerPos","player","getPosition","dist","pDistance","position","spawnNewStar","gainScore","destroy"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,oBAAa;AAXL,KAHP;;AAiBL;AACAC,YAAQ,kBAAY,CAEnB,CApBI;;AAsBL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAG,KAAKC,iBAAL,KAA2B,KAAKJ,UAAnC,EAA+C;AAC3C;AACA,iBAAKK,QAAL;AACA;AACH;AACD,YAAIC,eAAe,IAAG,KAAKC,IAAL,CAAUC,KAAV,GAAgB,KAAKD,IAAL,CAAUE,YAAhD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKC,IAAL,CAAUC,OAAV,GAAoBF,aAAaG,KAAKC,KAAL,CAAWR,gBAAgB,MAAMI,UAAtB,CAAX,CAAjC;AACH,KAjCI;AAkCLN,uBAAoB,6BAAW;AAC3B;AACA,YAAIW,YAAY,KAAKR,IAAL,CAAUS,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAOvB,GAAGwB,SAAH,CAAa,KAAKR,IAAL,CAAUS,QAAvB,EAAiCL,SAAjC,CAAX;AACA,eAAOG,IAAP;AACH,KAxCI;AAyCLb,cAAW,oBAAW;AAClB;AACA,aAAKE,IAAL,CAAUc,YAAV;AACA;AACA,aAAKd,IAAL,CAAUe,SAAV;AACA,aAAKX,IAAL,CAAUY,OAAV;AACH;AA/CI,CAAT","file":"unknown","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        pickRadius : 0\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        \n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        //每帧判断和主角之间的距离是否小于收集距离\n        if(this.getPlayerDistance() < this.pickRadius) {\n            //调用收集行为\n            this.onPicked();\n            return;\n        }\n        var opacityRatio = 1- this.game.timer/this.game.starDuration;\n        var minOpacity = 50;\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n    },\n    getPlayerDistance : function() {\n        //根据player 节点位置判断距离\n        var playerPos = this.game.player.getPosition();\n        //根据两点位置计算两点之间距离\n        var dist = cc.pDistance(this.node.position, playerPos);\n        return dist;\n    },\n    onPicked : function() {\n        //当星星被收集时，调用Game脚本中的接口，生成一个新的星星\n        this.game.spawnNewStar();\n        //调用Game脚本的得分方法\n        this.game.gainScore();\n        this.node.destroy();\n    }\n});\n"]}